<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/KEYSTORE_SETUP.md">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/KEYSTORE_SETUP.md" />
              <option name="updatedContent" value="# Release Keystore Setup Instructions&#10;&#10;## Step 1: Generate Your Release Keystore&#10;&#10;Open a terminal/command prompt and run the following command:&#10;&#10;```bash&#10;keytool -genkey -v -keystore expm-release-key.jks -keyalg RSA -keysize 2048 -validity 10000 -alias expm-key-alias&#10;```&#10;&#10;You'll be prompted to enter:&#10;1. **Keystore password** - Enter a strong password (remember this!)&#10;2. **Key password** - Enter a password for the key (can be same as keystore password)&#10;3. **Your name** (CN)&#10;4. **Organization unit** (OU)&#10;5. **Organization** (O)&#10;6. **City** (L)&#10;7. **State** (S)&#10;8. **Country code** (C) - e.g., US, IN, UK&#10;&#10;**IMPORTANT:** &#10;- Save the keystore password and key password securely - you cannot recover them!&#10;- Store the .jks file safely - if you lose it, you cannot update your app on Google Play Store&#10;&#10;## Step 2: Move the Keystore File&#10;&#10;After generating, move the `expm-release-key.jks` file to:&#10;```&#10;C:\Users\susha\AndroidStudioProjects\ExpM\app\&#10;```&#10;&#10;## Step 3: Update keystore.properties&#10;&#10;Edit the file `C:\Users\susha\AndroidStudioProjects\ExpM\keystore.properties` with your actual values:&#10;&#10;```properties&#10;storePassword=YOUR_KEYSTORE_PASSWORD&#10;keyPassword=YOUR_KEY_PASSWORD&#10;keyAlias=expm-key-alias&#10;storeFile=expm-release-key.jks&#10;```&#10;&#10;Replace:&#10;- `YOUR_KEYSTORE_PASSWORD` with the keystore password you entered&#10;- `YOUR_KEY_PASSWORD` with the key password you entered&#10;&#10;## Step 4: Add to .gitignore&#10;&#10;**CRITICAL:** Make sure these files are in your .gitignore to prevent committing sensitive data:&#10;&#10;```&#10;# Keystore files&#10;*.jks&#10;*.keystore&#10;keystore.properties&#10;```&#10;&#10;## Step 5: Build Release APK&#10;&#10;Once configured, you can build a signed release APK:&#10;&#10;```bash&#10;gradlew assembleRelease&#10;```&#10;&#10;The signed APK will be at:&#10;```&#10;app\build\outputs\apk\release\app-release.apk&#10;```&#10;&#10;## Step 6: Generate Signing Report&#10;&#10;To get SHA-1 and SHA-256 fingerprints (needed for Firebase, Google APIs, etc.):&#10;&#10;```bash&#10;gradlew signingReport&#10;```&#10;&#10;Look for the &quot;Variant: release&quot; section in the output for your release certificate fingerprints.&#10;&#10;## Alternative: Generate Keystore Using Android Studio&#10;&#10;1. Go to **Build â†’ Generate Signed Bundle / APK**&#10;2. Select **APK**&#10;3. Click **Create new...**&#10;4. Fill in the form with your details&#10;5. Remember to update `keystore.properties` with the values you entered&#10;&#10;## Backup Your Keystore&#10;&#10;**IMPORTANT:** Create a secure backup of:&#10;- `expm-release-key.jks` file&#10;- `keystore.properties` file (or remember the passwords)&#10;&#10;Store them in a secure location (e.g., password manager, secure cloud storage).&#10;&#10;Without the keystore, you cannot:&#10;- Update your app on Google Play Store&#10;- Sign new versions of your app&#10;- The app will be permanently locked&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>